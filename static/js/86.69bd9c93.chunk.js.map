{"version":3,"file":"static/js/86.69bd9c93.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","Redux/contacts/selectors.js","components/ContactForm/ContactForm.js","Redux/contacts/filterSlice.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/GlobalStyle.js","pages/Contacts.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectFilterContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    // console.log('Calculating visible tasks');\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { selectContacts } from 'Redux/contacts/selectors';\nimport { addContact } from '../../Redux/contacts/operations';\nimport { toast } from 'react-toastify';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const dispatch = useDispatch();\n  const allContacts = useSelector(selectContacts);\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const uniqueName = name.toLowerCase().trim();\n    const uniqueNumber = phone.toLowerCase().trim();\n\n    if (\n      allContacts.find(\n        ({ name }) => name.toLocaleLowerCase().trim() === uniqueName\n      )\n    ) {\n      toast.warn(\n        `Please enter another name. ${name} is already exists in your contacts `\n      );\n      return;\n    }\n    if (\n      allContacts.find(\n        ({ phone }) => phone.toLocaleLowerCase().trim() === uniqueNumber\n      )\n    ) {\n      toast.warn(\n        `Please enter another number. ${phone} is already exists in your contacts `\n      );\n      return;\n    }\n    const id = nanoid();\n    // const newContact = { name, phone, id };\n    // addContact(newContact);\n    dispatch(addContact({ name, phone, id })).then(result => {\n      if (result.meta.requestStatus === 'fulfilled') {\n        setName('');\n        setPhone('');\n        return;\n      }\n      toast.error(`Something went wrong. Сontact ${name} was not added`);\n    });\n  };\n\n  return (\n    <form\n      onSubmit={onSubmit}\n      style={{\n        border: '0.1rem solid black',\n        borderRadius: '0.5rem',\n        marginTop: '0.5rem',\n        padding: '1rem',\n        position: 'relative',\n      }}\n    >\n      <label\n        style={{ display: 'flex', flexDirection: 'column', gap: '0.5rem' }}\n      >\n        Name\n        <input\n          style={{ maxWidth: '70%' }}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n          maxLength=\"20\"\n          // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          marginTop: '1rem',\n          gap: '0.5rem',\n        }}\n      >\n        Phone\n        <input\n          style={{ maxWidth: '70%' }}\n          type=\"tel\"\n          name=\"phone\"\n          value={phone}\n          onChange={e => setPhone(e.target.value)}\n          maxLength=\"12\"\n          // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button\n        type=\"submit\"\n        style={{\n          padding: '0.5rem',\n          marginTop: '1rem',\n          // width: 'max-content',\n          width: '6.3rem',\n          height: '5.8rem',\n          position: 'absolute',\n          top: '1.6rem',\n          right: '1rem',\n        }}\n      >\n        Add contact\n      </button>\n    </form>\n  );\n};\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState: '',\n  reducers: {\n    contactsFilter: (state, action) => {\n      return action.payload;\n    },\n  },\n});\n\nexport const filterReducer = filterSlice.reducer;\nexport const { contactsFilter } = filterSlice.actions;\n// export const filterValue = state => state.filter;\n","import { contactsFilter } from 'Redux/contacts/filterSlice';\nimport { selectFilter } from 'Redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  return (\n    <>\n      <label\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '0.5rem',\n          marginTop: '1rem',\n        }}\n      >\n        Find contact by name\n        <input\n          style={{\n            display: 'flex',\n          }}\n          onChange={e => dispatch(contactsFilter(e.target.value))}\n          value={filter}\n          type=\"text\"\n          name=\"filter\"\n        />\n      </label>\n    </>\n  );\n};\n","import {\n  selectError,\n  selectFilterContacts,\n  selectIsLoading,\n} from 'Redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts, deleteContact } from '../../Redux/contacts/operations';\n\nexport const ContactList = () => {\n  const filterContacts = useSelector(selectFilterContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onDelContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <div style={{ marginTop: '1rem' }}>\n      <h2 style={{ marginBottom: '0.5rem' }}>Contacts</h2>\n      <ul>\n        {isLoading && <div>Loading...</div>}\n        {!filterContacts?.length && !error && !isLoading && (\n          <div>Not found. Try something else</div>\n        )}\n        {error && <div>{error}</div>}\n\n        {filterContacts.map(({ id, name, phone }) => (\n          <li\n            key={id}\n            style={{\n              marginBottom: '0.5rem',\n              width: 'max-content',\n              display: 'grid',\n              grid: 'auto-flow / 3fr 2fr 1fr',\n            }}\n          >\n            {name}: <b style={{ marginLeft: '0.3rem' }}>{phone}</b>\n            <button\n              style={{\n                margin: '0 0.7rem',\n                fontSize: '0.7rem',\n              }}\n              type=\"button\"\n              onClick={() => onDelContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { createGlobalStyle } from 'styled-components';\nimport 'modern-normalize';\n\nexport const GlobalStyle = createGlobalStyle`\nbody {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np {\n  margin: 0;\n}\n\nul, ol {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchContacts } from '../Redux/contacts/operations';\nimport { selectIsLoading } from '../Redux/contacts/selectors';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ToastContainer } from 'react-toastify';\nimport { GlobalStyle } from 'components/GlobalStyle';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <Filter />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n      <ToastContainer position=\"top-left\" autoClose={2000} />\n\n      <GlobalStyle />\n    </>\n  );\n}\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectFilterContacts","toLowerCase","includes","ContactForm","useState","setName","phone","setPhone","dispatch","useDispatch","allContacts","useSelector","onSubmit","e","preventDefault","uniqueName","trim","uniqueNumber","toLocaleLowerCase","toast","id","nanoid","addContact","then","result","meta","requestStatus","style","border","borderRadius","marginTop","padding","position","display","flexDirection","gap","maxWidth","type","onChange","target","maxLength","title","required","width","height","top","right","filterSlice","createSlice","initialState","reducers","contactsFilter","action","payload","reducer","actions","Filter","ContactList","filterContacts","useEffect","fetchContacts","marginBottom","grid","marginLeft","margin","fontSize","onClick","deleteContact","onDelContact","GlobalStyle","createGlobalStyle","Contacts","autoClose"],"sourceRoot":""}